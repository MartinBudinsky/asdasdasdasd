{
	"info": {
		"_postman_id": "945d92c9-57df-498c-bb8f-2baa109332bb",
		"name": "createUserAndCarWithoutType",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3466389"
	},
	"item": [
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('createUser', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    const jsonResponse = pm.response.json();\r",
							"    pm.expect(jsonResponse.id).to.be.a('number');\r",
							"    pm.expect(jsonResponse.firstName).to.eql(pm.variables.get('userFirstName'));\r",
							"    pm.expect(jsonResponse.lastName).to.eql(pm.variables.get('userLastName'));\r",
							"    pm.expect(jsonResponse.email).to.eql(pm.variables.get('userEmail'));\r",
							"    pm.variables.set('userId', jsonResponse.id);\r",
							"\r",
							"    pm.expect(jsonResponse.cars).to.be.an('array');\r",
							"    pm.expect(jsonResponse.cars.length).to.eql(1);\r",
							"    const car = jsonResponse.cars[0];\r",
							"    pm.expect(car.id).to.be.a('number');\r",
							"    pm.variables.set('carId', car.id);\r",
							"    pm.expect(car.brand).to.eql(pm.variables.get('carBrand'));\r",
							"    pm.expect(car.model).to.eql(pm.variables.get('carModel'));\r",
							"    pm.expect(car.vrp).to.eql(pm.variables.get('carVrp'));\r",
							"    pm.expect(car.colour).to.eql(pm.variables.get('carColor'));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": -92119638,\n  \"firstName\": \"{{userFirstName}}\",\n  \"lastName\": \"{{userLastName}}\",\n  \"email\": \"{{userEmail}}\",\n  \"cars\": [\n      {\n        \"id\": -47280362,\n        \"brand\": \"{{carBrand}}\",\n        \"model\": \"{{carModel}}\",\n        \"vrp\": \"{{carVrp}}\",\n        \"colour\": \"{{carColor}}\",\n        \"reservations\": [],\n        \"owner\": {\n            \"id\": 47280362\n        }\n      }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": [
				{
					"name": "User created and returned",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": -92119638,\n  \"firstName\": \"\",\n  \"lastName\": \"amet\",\n  \"email\": \"dolore Ut ipsum Excepteur occaecat\",\n  \"cars\": [\n    {\n      \"id\": -94795816,\n      \"brand\": \"Ut tempor\",\n      \"model\": \"id\",\n      \"vrp\": \"Duis officia\",\n      \"owner\": {\n        \"id\": 4137500\n      },\n      \"colour\": \"eiusmod magna\",\n      \"type\": {\n        \"id\": 2347874,\n        \"name\": \"in sint anim elit\"\n      },\n      \"reservations\": [\n        {\n          \"id\": -70154414,\n          \"start\": \"nulla esse\",\n          \"end\": \"ut culpa\",\n          \"prices\": -37727304.479717195,\n          \"car\": {\n            \"id\": -43178431\n          },\n          \"spot\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"identifier\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carParkFloor\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carPark\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"free\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"id\": 85622872,\n          \"start\": \"consequat Lorem dolor Duis\",\n          \"end\": \"pariatur exercitation \",\n          \"prices\": 75813863.03788736,\n          \"car\": {\n            \"id\": -15608823\n          },\n          \"spot\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"identifier\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carParkFloor\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carPark\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"free\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"id\": 47013681,\n      \"brand\": \"laboris qui nulla ad amet\",\n      \"model\": \"consectetur cupidatat volu\",\n      \"vrp\": \"eu cillum Lorem nisi\",\n      \"owner\": {\n        \"id\": 84340831\n      },\n      \"colour\": \"commodo ullamco consequat\",\n      \"type\": {\n        \"id\": -45455196,\n        \"name\": \"est dolore irure\"\n      },\n      \"reservations\": [\n        {\n          \"id\": 69308475,\n          \"start\": \"occaecat anim fugiat labore nisi\",\n          \"end\": \"mollit\",\n          \"prices\": 76711864.89587432,\n          \"car\": {\n            \"id\": 84401762\n          },\n          \"spot\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"identifier\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carParkFloor\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carPark\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"free\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"id\": 420577,\n          \"start\": \"ut adipisicing\",\n          \"end\": \"consectetur ipsum voluptate cillum qui\",\n          \"prices\": 32422725.600980103,\n          \"car\": {\n            \"id\": 52493398\n          },\n          \"spot\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"identifier\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carParkFloor\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carPark\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"free\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": -92119638,\n  \"firstName\": \"\",\n  \"lastName\": \"amet\",\n  \"email\": \"dolore Ut ipsum Excepteur occaecat\",\n  \"cars\": [\n    {\n      \"id\": -94795816,\n      \"brand\": \"Ut tempor\",\n      \"model\": \"id\",\n      \"vrp\": \"Duis officia\",\n      \"owner\": {\n        \"id\": 4137500\n      },\n      \"colour\": \"eiusmod magna\",\n      \"type\": {\n        \"id\": 2347874,\n        \"name\": \"in sint anim elit\"\n      },\n      \"reservations\": [\n        {\n          \"id\": -70154414,\n          \"start\": \"nulla esse\",\n          \"end\": \"ut culpa\",\n          \"prices\": -37727304.479717195,\n          \"car\": {\n            \"id\": -43178431\n          },\n          \"spot\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"identifier\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carParkFloor\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carPark\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"free\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"id\": 85622872,\n          \"start\": \"consequat Lorem dolor Duis\",\n          \"end\": \"pariatur exercitation \",\n          \"prices\": 75813863.03788736,\n          \"car\": {\n            \"id\": -15608823\n          },\n          \"spot\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"identifier\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carParkFloor\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carPark\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"free\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"id\": 47013681,\n      \"brand\": \"laboris qui nulla ad amet\",\n      \"model\": \"consectetur cupidatat volu\",\n      \"vrp\": \"eu cillum Lorem nisi\",\n      \"owner\": {\n        \"id\": 84340831\n      },\n      \"colour\": \"commodo ullamco consequat\",\n      \"type\": {\n        \"id\": -45455196,\n        \"name\": \"est dolore irure\"\n      },\n      \"reservations\": [\n        {\n          \"id\": 69308475,\n          \"start\": \"occaecat anim fugiat labore nisi\",\n          \"end\": \"mollit\",\n          \"prices\": 76711864.89587432,\n          \"car\": {\n            \"id\": 84401762\n          },\n          \"spot\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"identifier\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carParkFloor\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carPark\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"free\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"id\": 420577,\n          \"start\": \"ut adipisicing\",\n          \"end\": \"consectetur ipsum voluptate cillum qui\",\n          \"prices\": 32422725.600980103,\n          \"car\": {\n            \"id\": 52493398\n          },\n          \"spot\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"identifier\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carParkFloor\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carPark\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"free\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    }\n  ]\n}"
				},
				{
					"name": "Incorrectly formed request body",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": -92119638,\n  \"firstName\": \"\",\n  \"lastName\": \"amet\",\n  \"email\": \"dolore Ut ipsum Excepteur occaecat\",\n  \"cars\": [\n    {\n      \"id\": -94795816,\n      \"brand\": \"Ut tempor\",\n      \"model\": \"id\",\n      \"vrp\": \"Duis officia\",\n      \"owner\": {\n        \"id\": 4137500\n      },\n      \"colour\": \"eiusmod magna\",\n      \"type\": {\n        \"id\": 2347874,\n        \"name\": \"in sint anim elit\"\n      },\n      \"reservations\": [\n        {\n          \"id\": -70154414,\n          \"start\": \"nulla esse\",\n          \"end\": \"ut culpa\",\n          \"prices\": -37727304.479717195,\n          \"car\": {\n            \"id\": -43178431\n          },\n          \"spot\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"identifier\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carParkFloor\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carPark\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"free\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"id\": 85622872,\n          \"start\": \"consequat Lorem dolor Duis\",\n          \"end\": \"pariatur exercitation \",\n          \"prices\": 75813863.03788736,\n          \"car\": {\n            \"id\": -15608823\n          },\n          \"spot\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"identifier\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carParkFloor\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carPark\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"free\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"id\": 47013681,\n      \"brand\": \"laboris qui nulla ad amet\",\n      \"model\": \"consectetur cupidatat volu\",\n      \"vrp\": \"eu cillum Lorem nisi\",\n      \"owner\": {\n        \"id\": 84340831\n      },\n      \"colour\": \"commodo ullamco consequat\",\n      \"type\": {\n        \"id\": -45455196,\n        \"name\": \"est dolore irure\"\n      },\n      \"reservations\": [\n        {\n          \"id\": 69308475,\n          \"start\": \"occaecat anim fugiat labore nisi\",\n          \"end\": \"mollit\",\n          \"prices\": 76711864.89587432,\n          \"car\": {\n            \"id\": 84401762\n          },\n          \"spot\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"identifier\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carParkFloor\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carPark\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"free\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"id\": 420577,\n          \"start\": \"ut adipisicing\",\n          \"end\": \"consectetur ipsum voluptate cillum qui\",\n          \"prices\": 32422725.600980103,\n          \"car\": {\n            \"id\": 52493398\n          },\n          \"spot\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"identifier\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carParkFloor\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"carPark\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"free\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get user by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('getUser', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    const jsonResponse = pm.response.json();\r",
							"    pm.expect(jsonResponse.id).to.be.a('number');\r",
							"    pm.expect(jsonResponse.firstName).to.eql(pm.variables.get('userFirstName'));\r",
							"    pm.expect(jsonResponse.lastName).to.eql(pm.variables.get('userLastName'));\r",
							"    pm.expect(jsonResponse.email).to.eql(pm.variables.get('userEmail'));\r",
							"    pm.expect(jsonResponse.id).to.eql(pm.variables.get('userId'));\r",
							"\r",
							"    pm.expect(jsonResponse.cars).to.be.an('array');\r",
							"    pm.expect(jsonResponse.cars.length).to.eql(1);\r",
							"     const car = jsonResponse.cars[0];\r",
							"    pm.expect(car.id).to.eql(pm.variables.get('carId'));\r",
							"    pm.expect(car.brand).to.eql(pm.variables.get('carBrand'));\r",
							"    pm.expect(car.model).to.eql(pm.variables.get('carModel'));\r",
							"    pm.expect(car.vrp).to.eql(pm.variables.get('carVrp'));\r",
							"    pm.expect(car.colour).to.eql(pm.variables.get('carColor'));\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userId}}"
					]
				}
			},
			"response": [
				{
					"name": "Users returned",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users?email=5r10oaT1W@oeCrUpWcvcaSsbIA.iqq",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "5r10oaT1W@oeCrUpWcvcaSsbIA.iqq"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": -25673163,\n    \"firstName\": \"adipisicing dolor\",\n    \"lastName\": \"fugiat pariatur Ut\",\n    \"email\": \"ut\",\n    \"cars\": [\n      {\n        \"id\": -14410842,\n        \"brand\": \"est dolore occaecat in\",\n        \"model\": \"dolore mollit consectetur et nostrud\",\n        \"vrp\": \"veniam pariatur aliqua\",\n        \"owner\": {\n          \"id\": 7042107\n        },\n        \"colour\": \"dolor et tempor\",\n        \"type\": {\n          \"id\": -54859303,\n          \"name\": \"velit\"\n        },\n        \"reservations\": [\n          {\n            \"id\": 39718914,\n            \"start\": \"in \",\n            \"end\": \"ad dolore et enim\",\n            \"prices\": 17803472.201867536,\n            \"car\": {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            \"spot\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"coupon\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 16608536,\n            \"start\": \"deserunt incididunt officia\",\n            \"end\": \"do incididunt nostrud\",\n            \"prices\": 56451724.288390994,\n            \"car\": {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            \"spot\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"coupon\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"id\": 15736049,\n        \"brand\": \"esse\",\n        \"model\": \"laboris do dolor adipisicing\",\n        \"vrp\": \"est dolor nulla incididunt\",\n        \"owner\": {\n          \"id\": -92272019\n        },\n        \"colour\": \"ad incididunt amet commodo\",\n        \"type\": {\n          \"id\": -21788351,\n          \"name\": \"do\"\n        },\n        \"reservations\": [\n          {\n            \"id\": 85166250,\n            \"start\": \"nostrud aliquip\",\n            \"end\": \"commodo magna\",\n            \"prices\": 83365037.23124778,\n            \"car\": {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            \"spot\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"coupon\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": -6870468,\n            \"start\": \"Duis ad in eu tempor\",\n            \"end\": \"labore sunt reprehenderit\",\n            \"prices\": -97649041.3631431,\n            \"car\": {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            \"spot\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"coupon\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"id\": 36774519,\n    \"firstName\": \"qui\",\n    \"lastName\": \"deserunt si\",\n    \"email\": \"Ut ut ad anim\",\n    \"cars\": [\n      {\n        \"id\": -51891904,\n        \"brand\": \"qui velit\",\n        \"model\": \"adipisicing non velit ad\",\n        \"vrp\": \"in deserunt\",\n        \"owner\": {\n          \"id\": -20083300\n        },\n        \"colour\": \"irure fugiat nisi eiusmod\",\n        \"type\": {\n          \"id\": 91762753,\n          \"name\": \"consequat in dolore ven\"\n        },\n        \"reservations\": [\n          {\n            \"id\": -71929792,\n            \"start\": \"enim\",\n            \"end\": \"sed nulla\",\n            \"prices\": -26139259.788912788,\n            \"car\": {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            \"spot\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"coupon\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 51003047,\n            \"start\": \"culpa do\",\n            \"end\": \"in\",\n            \"prices\": 54999125.408337325,\n            \"car\": {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            \"spot\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"coupon\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"id\": -74927747,\n        \"brand\": \"officia ex non minim ullamco\",\n        \"model\": \"ut elit qui aute\",\n        \"vrp\": \"Excepteur irure\",\n        \"owner\": {\n          \"id\": -80114422\n        },\n        \"colour\": \"ex\",\n        \"type\": {\n          \"id\": 97525895,\n          \"name\": \"in sint\"\n        },\n        \"reservations\": [\n          {\n            \"id\": 32449277,\n            \"start\": \"ipsum irure sed Excepteur\",\n            \"end\": \"aliquip sit non laborum\",\n            \"prices\": -8345340.59829393,\n            \"car\": {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            \"spot\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"coupon\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": -392155,\n            \"start\": \"in aliqua minim\",\n            \"end\": \"deserunt labore nostrud officia Ut\",\n            \"prices\": 63031853.07269007,\n            \"car\": {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            \"spot\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"coupon\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  }\n]"
				}
			]
		},
		{
			"name": "Get car with id Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('getCar', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    const jsonResponse = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonResponse.id).to.be.a('number');\r",
							"    pm.expect(jsonResponse.id).to.be.eql(pm.variables.get('carId'));\r",
							"    pm.expect(jsonResponse.brand).to.eql(pm.variables.get('carBrand'));\r",
							"    pm.expect(jsonResponse.model).to.eql(pm.variables.get('carModel'));\r",
							"    pm.expect(jsonResponse.vrp).to.eql(pm.variables.get('carVrp'));\r",
							"    pm.expect(jsonResponse.colour).to.eql(pm.variables.get('carColor'));\r",
							"    \r",
							"    const owner = jsonResponse.owner;\r",
							"    if (typeof owner === 'number') {\r",
							"        pm.expect(owner).to.be.eql(pm.variables.get('userId'));\r",
							"    } else if (typeof owner === 'object') {\r",
							"        pm.expect(owner.id).to.be.eql(pm.variables.get('userId'));\r",
							"        if (owner.firstName != undefined) {\r",
							"            pm.expect(owner.firstName).to.be.eql(pm.variables.get('userFirstName'));\r",
							"        }\r",
							"        if (owner.lastName != undefined) {\r",
							"            pm.expect(owner.lastName).to.be.eql(pm.variables.get('userLastName'));\r",
							"        }\r",
							"        if (owner.email != undefined) {\r",
							"            pm.expect(owner.email).to.be.eql(pm.variables.get('userEmail'));\r",
							"        }\r",
							"    }\r",
							"    \r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/cars/{{carId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": [
				{
					"name": "Car exists and is returned",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cars/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cars",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "76401956",
									"description": "(Required) Id of car"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 29388343,\n  \"brand\": \"elit et\",\n  \"model\": \"in do\",\n  \"vrp\": \"aliquip do\",\n  \"owner\": {\n    \"id\": 23803240,\n    \"firstName\": \"labore amet id\",\n    \"lastName\": \"minim voluptate eiusmod\",\n    \"email\": \"Lorem\",\n    \"cars\": [\n      {\n        \"id\": 40535577\n      },\n      {\n        \"id\": -59550490\n      }\n    ]\n  },\n  \"colour\": \"in elit ullamco\",\n  \"type\": {\n    \"id\": 33425627,\n    \"name\": \"dolore voluptate cillum minim incididunt\"\n  },\n  \"reservations\": [\n    {\n      \"value\": \"reference #/components/schemas/CReservationDownFromCar not found in the OpenAPI spec\"\n    },\n    {\n      \"value\": \"reference #/components/schemas/CReservationDownFromCar not found in the OpenAPI spec\"\n    }\n  ]\n}"
				},
				{
					"name": "Car with given id does not exist",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cars/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cars",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "76401956",
									"description": "(Required) Id of car"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{auth_password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{auth_name}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:8080/api",
			"type": "string"
		}
	]
}