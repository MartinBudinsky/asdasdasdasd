{
	"info": {
		"_postman_id": "f4626952-ba63-4582-8718-68233584c216",
		"name": "createCarParkAndCarParkFloorWithId",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3466389"
	},
	"item": [
		{
			"name": "Create new car park",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('createCarParkAndCarParkFloorWithoutId', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    const jsonResponse = pm.response.json();\r",
							"    pm.expect(jsonResponse.name).to.eql(pm.variables.get('carParkName'));\r",
							"    pm.expect(jsonResponse.address).to.eql(pm.variables.get('carParkAddress'));\r",
							"    pm.expect(jsonResponse.prices).to.eql(parseInt(pm.variables.get('carParkPrice')));\r",
							"    pm.expect(jsonResponse.id).to.be.a('number');\r",
							"    pm.collectionVariables.set(\"carParkId\", jsonResponse.id);\r",
							"\r",
							"    pm.expect(jsonResponse.floors).to.be.an('array');\r",
							"    pm.expect(jsonResponse.floors.length).to.eql(1);\r",
							"\r",
							"    const floor = jsonResponse.floors[0];\r",
							"    if (typeof floor == \"number\") {\r",
							"       pm.variables.set('carParkFloorId', floor);\r",
							"    } else {\r",
							"        pm.expect(floor.identifier).to.eql(pm.variables.get('carParkFloorIdentifier'));\r",
							"        pm.expect(floor.carPark).to.eql(pm.variables.get('carParkId'));\r",
							"        pm.expect(floor.id).to.be.a('number');\r",
							"        pm.variables.set('carParkFloorId', floor.id);\r",
							"    }\r",
							"    \r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 29841333,\n  \"name\": \"{{carParkName}}\",\n  \"address\": \"{{carParkAddress}}\",\n  \"prices\": {{carParkPrice}},\n  \"floors\": [\n    {\n        \"id\": 4564531,\n      \"identifier\": \"{{carParkFloorIdentifier}}\",\n      \"carPark\": 20057293,\n      \"spots\": []\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/carparks",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"carparks"
					]
				}
			},
			"response": [
				{
					"name": "Entity created and returned",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 29841333,\n  \"name\": \"voluptate aute\",\n  \"address\": \"nulla\",\n  \"prices\": 23509364.03920953,\n  \"floors\": [\n    {\n      \"id\": 21058194,\n      \"identifier\": \"quis ad ea est\",\n      \"carPark\": 20057293,\n      \"spots\": [\n        {\n          \"id\": -43910668,\n          \"identifier\": \"eu sunt\",\n          \"carParkFloor\": \"elit veniam in est magna\",\n          \"carPark\": -4267909,\n          \"free\": true,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": -81692092,\n          \"identifier\": \"labore aliquip sed dolor\",\n          \"carParkFloor\": \"occaecat velit consectetur cul\",\n          \"carPark\": -6019994,\n          \"free\": false,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": 71324176,\n      \"identifier\": \"ex ut\",\n      \"carPark\": -71078999,\n      \"spots\": [\n        {\n          \"id\": 8496469,\n          \"identifier\": \"velit anim\",\n          \"carParkFloor\": \"ut ipsum cillum in adipisicing\",\n          \"carPark\": -12040139,\n          \"free\": true,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": -63826307,\n          \"identifier\": \"cupidatat dolor\",\n          \"carParkFloor\": \"nostrud\",\n          \"carPark\": 73544789,\n          \"free\": true,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carparks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carparks"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 29841333,\n  \"name\": \"voluptate aute\",\n  \"address\": \"nulla\",\n  \"prices\": 23509364.03920953,\n  \"floors\": [\n    {\n      \"id\": 21058194,\n      \"identifier\": \"quis ad ea est\",\n      \"carPark\": 20057293,\n      \"spots\": [\n        {\n          \"id\": -43910668,\n          \"identifier\": \"eu sunt\",\n          \"carParkFloor\": \"elit veniam in est magna\",\n          \"carPark\": -4267909,\n          \"free\": true,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": -81692092,\n          \"identifier\": \"labore aliquip sed dolor\",\n          \"carParkFloor\": \"occaecat velit consectetur cul\",\n          \"carPark\": -6019994,\n          \"free\": false,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": 71324176,\n      \"identifier\": \"ex ut\",\n      \"carPark\": -71078999,\n      \"spots\": [\n        {\n          \"id\": 8496469,\n          \"identifier\": \"velit anim\",\n          \"carParkFloor\": \"ut ipsum cillum in adipisicing\",\n          \"carPark\": -12040139,\n          \"free\": true,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": -63826307,\n          \"identifier\": \"cupidatat dolor\",\n          \"carParkFloor\": \"nostrud\",\n          \"carPark\": 73544789,\n          \"free\": true,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
				},
				{
					"name": "Incorrectly formed body",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 29841333,\n  \"name\": \"voluptate aute\",\n  \"address\": \"nulla\",\n  \"prices\": 23509364.03920953,\n  \"floors\": [\n    {\n      \"id\": 21058194,\n      \"identifier\": \"quis ad ea est\",\n      \"carPark\": 20057293,\n      \"spots\": [\n        {\n          \"id\": -43910668,\n          \"identifier\": \"eu sunt\",\n          \"carParkFloor\": \"elit veniam in est magna\",\n          \"carPark\": -4267909,\n          \"free\": true,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": -81692092,\n          \"identifier\": \"labore aliquip sed dolor\",\n          \"carParkFloor\": \"occaecat velit consectetur cul\",\n          \"carPark\": -6019994,\n          \"free\": false,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": 71324176,\n      \"identifier\": \"ex ut\",\n      \"carPark\": -71078999,\n      \"spots\": [\n        {\n          \"id\": 8496469,\n          \"identifier\": \"velit anim\",\n          \"carParkFloor\": \"ut ipsum cillum in adipisicing\",\n          \"carPark\": -12040139,\n          \"free\": true,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": -63826307,\n          \"identifier\": \"cupidatat dolor\",\n          \"carParkFloor\": \"nostrud\",\n          \"carPark\": 73544789,\n          \"free\": true,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carparks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carparks"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get carp park by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('getCarParkAndCarParkFloorWithoutId', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    const jsonResponse = pm.response.json();\r",
							"    pm.expect(jsonResponse.name).to.eql(pm.variables.get('carParkName'));\r",
							"    pm.expect(jsonResponse.address).to.eql(pm.variables.get('carParkAddress'));\r",
							"    pm.expect(jsonResponse.prices).to.eql(parseInt(pm.variables.get('carParkPrice')));\r",
							"    pm.expect(jsonResponse.id).to.be.a('number');\r",
							"    pm.collectionVariables.set(\"carParkId\", jsonResponse.id);\r",
							"\r",
							"   pm.expect(jsonResponse.floors).to.be.an('array');\r",
							"    pm.expect(jsonResponse.floors.length).to.eql(1);\r",
							"\r",
							"    const floor = jsonResponse.floors[0];\r",
							"    if (typeof floor == \"number\") {\r",
							"        pm.expect(floor).to.eql(pm.variables.get('carParkFloorId'));\r",
							"    } else {\r",
							"        pm.expect(floor.identifier).to.eql(pm.variables.get('carParkFloorIdentifier'));\r",
							"        pm.expect(floor.carPark).to.eql(pm.variables.get('carParkId'));\r",
							"        pm.expect(floor.id).to.eql(pm.variables.get('carParkFloorId'));\r",
							"    }\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/carparks/{{carParkId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"carparks",
						"{{carParkId}}"
					]
				}
			},
			"response": [
				{
					"name": "Car park was found and returned",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/carparks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carparks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "34798759",
									"description": "(Required) id of the car park"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 29841333,\n  \"name\": \"voluptate aute\",\n  \"address\": \"nulla\",\n  \"prices\": 23509364.03920953,\n  \"floors\": [\n    {\n      \"id\": 21058194,\n      \"identifier\": \"quis ad ea est\",\n      \"carPark\": 20057293,\n      \"spots\": [\n        {\n          \"id\": -43910668,\n          \"identifier\": \"eu sunt\",\n          \"carParkFloor\": \"elit veniam in est magna\",\n          \"carPark\": -4267909,\n          \"free\": true,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": -81692092,\n          \"identifier\": \"labore aliquip sed dolor\",\n          \"carParkFloor\": \"occaecat velit consectetur cul\",\n          \"carPark\": -6019994,\n          \"free\": false,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": 71324176,\n      \"identifier\": \"ex ut\",\n      \"carPark\": -71078999,\n      \"spots\": [\n        {\n          \"id\": 8496469,\n          \"identifier\": \"velit anim\",\n          \"carParkFloor\": \"ut ipsum cillum in adipisicing\",\n          \"carPark\": -12040139,\n          \"free\": true,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": -63826307,\n          \"identifier\": \"cupidatat dolor\",\n          \"carParkFloor\": \"nostrud\",\n          \"carPark\": 73544789,\n          \"free\": true,\n          \"type\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"reservations\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
				},
				{
					"name": "Car park with id not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/carparks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carparks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "34798759",
									"description": "(Required) id of the car park"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get car park floor that belongs to car park with given id and has given identifier",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('getCarParkFloorWithIdentifier', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    const jsonResponse = pm.response.json();\r",
							"    pm.expect(jsonResponse.identifier).to.eql(pm.variables.get('carParkFloorIdentifier'));\r",
							"    pm.expect(jsonResponse.carPark).to.eql(pm.variables.get('carParkId'));\r",
							"    pm.expect(jsonResponse.id).to.eql(pm.variables.get('carParkFloorId'));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/carparkfloors/{{carParkFloorId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"carparkfloors",
						"{{carParkFloorId}}"
					]
				}
			},
			"response": [
				{
					"name": "Car park floor found and returned",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/carparks/:id/floors/:identifier",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carparks",
								":id",
								"floors",
								":identifier"
							],
							"variable": [
								{
									"key": "id",
									"value": "34798759",
									"description": "(Required) Id of car park"
								},
								{
									"key": "identifier",
									"value": "labor",
									"description": "(Required) Identifier of the car park floor"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 28801965,\n  \"identifier\": \"ut dolore officia voluptate in\",\n  \"carPark\": -48966130,\n  \"spots\": [\n    {\n      \"id\": -72075388,\n      \"identifier\": \"nostrud aliqua\",\n      \"carParkFloor\": \"aute amet magna\",\n      \"carPark\": -52524685,\n      \"free\": true,\n      \"type\": {\n        \"id\": 11581768,\n        \"name\": \"tempor velit consequat\"\n      },\n      \"reservations\": [\n        {\n          \"id\": -66560679,\n          \"start\": \"voluptate enim consequat officia\",\n          \"end\": \"proident in mollit\",\n          \"prices\": -65892991.98487457,\n          \"car\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"brand\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"model\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"vrp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"owner\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"colour\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"spot\": {\n            \"id\": 61503743\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"id\": 23115356,\n          \"start\": \"dolor mollit adipisicing nisi\",\n          \"end\": \"anim occaecat nostrud dolor\",\n          \"prices\": -61595633.447419874,\n          \"car\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"brand\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"model\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"vrp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"owner\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"colour\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"spot\": {\n            \"id\": -38598427\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"id\": -84078315,\n      \"identifier\": \"pariatur esse occaecat qui\",\n      \"carParkFloor\": \"sit dolore eu\",\n      \"carPark\": -37160781,\n      \"free\": false,\n      \"type\": {\n        \"id\": -20297665,\n        \"name\": \"dolore in sint deserunt\"\n      },\n      \"reservations\": [\n        {\n          \"id\": -51589823,\n          \"start\": \"pariatur Ut ea incididunt\",\n          \"end\": \"esse commodo nostrud\",\n          \"prices\": 64545770.18964663,\n          \"car\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"brand\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"model\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"vrp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"owner\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"colour\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"spot\": {\n            \"id\": 78965734\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"id\": -46641030,\n          \"start\": \"irure nostrud consequat\",\n          \"end\": \"Duis Ut\",\n          \"prices\": -69233894.82076617,\n          \"car\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"brand\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"model\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"vrp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"owner\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"colour\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"reservations\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"spot\": {\n            \"id\": 68889124\n          },\n          \"coupon\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"discount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    }\n  ]\n}"
				},
				{
					"name": "Car park with given id was not found or car park floor with given identifier for given car park was not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/carparks/:id/floors/:identifier",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carparks",
								":id",
								"floors",
								":identifier"
							],
							"variable": [
								{
									"key": "id",
									"value": "34798759",
									"description": "(Required) Id of car park"
								},
								{
									"key": "identifier",
									"value": "labor",
									"description": "(Required) Identifier of the car park floor"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{auth_password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{auth_name}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:8080/api",
			"type": "string"
		},
		{
			"key": "carParkId",
			"value": ""
		}
	]
}